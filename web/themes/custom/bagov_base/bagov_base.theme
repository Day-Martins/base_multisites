<?php

use Drupal\file\Entity\File;
use Drupal\core\Url;
use Drupal\image\Entity\ImageStyle;
/**
 * @file
 * Tema de Notícias theme file.
 */

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function bagov_base_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $suggestions[] = 'page__' . $node->bundle();
    }
}

/**
 * Prepares variables for page noticia.
 *
 * Default template: page--noticia.html.twig.
 *
 * @param array $vars
 *   An associative array containing:
 *   - node: A Node object.
 */
function bagov_base_preprocess_page__noticia(array &$vars)
{
    if (($node = \Drupal::routeMatch()->getParameter('node')) && $node instanceof \Drupal\node\NodeInterface) {
        $vars['noticia']['titulo'] = $node->title->value;
        $vars['noticia']['corpo'] = $node->body->value;
        $vars['noticia']['criado_em'] = $node->created->value;

        //Pega todos os arquivos anexados
        $referenced_entities = $node->get('field_anexo_noticia')->referencedEntities();

        if (!empty($referenced_entities)) {
            //Percorre os arquivos anexados
            foreach ($referenced_entities as $id => $entity) {
                //Verifica qual o tipo de anexo e define o id do arquivo
                if ($entity->field_media_image) {
                    $fid = $entity->field_media_image->target_id;
                } elseif ($entity->field_media_document) {
                    $fid = $entity->field_media_document->target_id;
                } elseif ($entity->field_media_video_file) {
                    $fid = $entity->field_media_video_file->target_id;
                } elseif ($entity->field_media_remote_video) {
                    $fid = $entity->field_media_remote_video->target_id;
                } elseif ($entity->field_media_audio_file) {
                    $fid = $entity->field_media_audio_file->target_id;
                }

                //Carrega o arquivo e gera a URL através da URI
                $file = File::load($fid);
                $file_uri = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
                $url = Url::fromUri($file_uri)->toString();
                //Salva a URL para download nas variáveis
                $vars['noticia']['anexos'][$id]['url'] = $url;

                //Carrega o thumbnail do arquivo e salva a url nas variáveis
                $thumbnail = $file = File::load($entity->thumbnail->target_id);
                $file_thumbnail_uri = \Drupal::service('file_url_generator')->generateAbsoluteString($thumbnail->getFileUri());
                $thumbnail_url = Url::fromUri($file_thumbnail_uri)->toString();
                $image_uri = $file->getFileUri();
                $style = ImageStyle::load('thumbnail');
                $thumbnail_url = $style->buildUrl($image_uri);
                $vars['noticia']['anexos'][$id]['thumbnail'] = $thumbnail_url;
            }
        }
    }
}

/**
 * Implements hook_preprocess_HOOK() for views-view-fields--carrousel-de-eventos--block-1.html.twig.
 */
function bagov_base_preprocess_views_view_fields__carrousel_de_eventos__block_1(&$variables) {
  $date_regex = "/\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/";
  $content = $variables['fields']['field_datas']->content;
  preg_match_all($date_regex, $content, $matches);
  $variables['fields']['field_data_inicio'] = $matches[0][0];
}
