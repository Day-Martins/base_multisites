{#
/**
* @file
* Theme override to display a node.
*
* Available variables:
* - node: The node entity with limited access to object properties and methods.
*   Only method names starting with "get", "has", or "is" and a few common
*   methods such as "id", "label", and "bundle" are available. For example:
*   - node.getCreatedTime() will return the node creation timestamp.
*   - node.hasField('field_example') returns TRUE if the node bundle includes
*     field_example. (This does not indicate the presence of a value in this
*     field.)
*   - node.isPublished() will return whether the node is published or not.
*   Calling other methods, such as node.delete(), will result in an exception.
*   See \Drupal\node\Entity\Node for a full list of public properties and
*   methods for the node object.
* - label: (optional) The title of the node.
* - content: All node items. Use {{ content }} to print them all,
*   or print a subset such as {{ content.field_example }}. Use
*   {{ content|without('field_example') }} to temporarily suppress the printing
*   of a given child element.
* - author_picture: The node author user entity, rendered using the "compact"
*   view mode.
* - metadata: Metadata for this node.
* - date: (optional) Themed creation date field.
* - author_name: (optional) Themed author name field.
* - url: Direct URL of the current node.
* - display_submitted: Whether submission information should be displayed.
* - attributes: HTML attributes for the containing element.
*   The attributes.class element may contain one or more of the following
*   classes:
*   - node: The current template type (also known as a "theming hook").
*   - node--type-[type]: The current node type. For example, if the node is an
*     "Article" it would result in "node--type-article". Note that the machine
*     name will often be in a short form of the human readable label.
*   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
*     teaser would result in: "node--view-mode-teaser", and
*     full: "node--view-mode-full".
*   The following are controlled through the node publishing options.
*   - node--promoted: Appears on nodes promoted to the front page.
*   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
*     teaser listings.
*   - node--unpublished: Appears on unpublished nodes visible only to site
*     admins.
* - title_attributes: Same as attributes, except applied to the main title
*   tag that appears in the template.
* - content_attributes: Same as attributes, except applied to the main
*   content tag that appears in the template.
* - author_attributes: Same as attributes, except applied to the author of
*   the node tag that appears in the template.
* - title_prefix: Additional output populated by modules, intended to be
*   displayed in front of the main title tag that appears in the template.
* - title_suffix: Additional output populated by modules, intended to be
*   displayed after the main title tag that appears in the template.
* - view_mode: View mode; for example, "teaser" or "full".
* - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
* - page: Flag for the full page state. Will be true if view_mode is 'full'.
* - readmore: Flag for more state. Will be true if the teaser content of the
*   node cannot hold the main body content.
* - logged_in: Flag for authenticated user status. Will be true when the
*   current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
*   is an administrator.
*
* @see template_preprocess_node()
*
*/
#}
<style>
.title-primary{
    color:#36b0b4;
};
</style>

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('bootstrap5/node') }}
<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if label and not page %}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
  {% endif %}
  {{ title_suffix }}

    <div>


   {% if node.field_image is not empty %}
    {% for item in node.field_image %}
        <img src="{{ file_url(item.entity.fileuri) }}" alt="{{ item.alt }}" />
    {% endfor %}
{% endif %}

<h1 class="fw-bold title-primary">
    {{node.title.value}}</h1>


{% if node.field_datas is not empty %}
    <div class="date-range">
        <strong class="fw-bold">
            {{ node.field_datas.value|date("d/m/Y H:i") }} - {{ node.field_datas.end_value|date("d/m/Y H:i") }}
        </strong>
    </div>
{% endif %}


{% if node.field_categorias is not empty %}
    <ul class="categories-list">
        {% for item in node.field_categorias %}
            <li>{{ item.entity.label }}</li>
        {% endfor %}
    </ul>
{% endif %}



{% if node.field_emails is not empty %}
    <ul class="email-list">
        {% for email in node.field_emails %}
            <li>{{ email.value }}</li>
        {% endfor %}
    </ul>
{% endif %}

{% if node.field_contato is not empty %}
  <div class="contact-info">
    <h2 class="fw-bold">Informações de Contato</h2>
    <ul class="list-group">
      {% for contato in node.field_contato %}
        <li class="list-group-item">{{ contato.value }}</li>
      {% endfor %}
    </ul>
  </div>
{% endif %}

{% if node.field_endereco is not empty %}
  <div class="contact-info">
    <h2 class="fw-bold">Informações de endereco</h2>
    <ul class="list-group">
      {% for endereco in node.field_endereco %}
        <li class="list-group-item">{{ endereco.value }}</li>
      {% endfor %}
    </ul>
  </div>
{% endif %}

{% if node.field_tags is not empty %}
    <ul class="tags-list">
    <h2>Tags</h2>
        {% for tag in node.field_tags %}
            <li>{{ tag.entity.label }}</li>
        {% endfor %}
    </ul>
{% endif %}


{% if node.field_webform is not empty %}
    <div class="node-webform">
        {{ node.webform }}
    </div>
{% endif %}


{% if node.field_webform_entity_limit_total is not empty %}
<div class="entity-limit-total">
        {{ node.field_webform_entity_limit_total.value }}
</div>
{% endif %}


{% if node.body is not empty %}
    <div class="body-content">
        {{ node.body.value|raw }}
    </div>
{% endif %}


{% if node.field_contato is not empty %}
  <div class="contact-info">
    <h2 class="fw-bold">Informações de Contato</h2>
    <p><strong>Telefone:</strong> {{ node.field_contato.telefone }}</p>
    <p><strong>Email:</strong> {{ node.field_contato.email }}</p>
  </div>
{% endif %}


{# {% if node.field_sites is not empty %}
    <ul class="site-list">
        {% for site in node.field_sites %}
             <li><a href="{{ site.uri }}" target="_blank">{{ site.title|default('Visit Site') }}</a>
            <div class="embed-container">
    <iframe src="{{ site.uri }}" width="600" height="400" frameborder="0">
        Mensagem para navegadores que não suportam iframes.
    </iframe>
</div>
            </li>
        {% endfor %}
    </ul>
{% endif %} #}



  </div>
<pre>
    {{ dump(node.fields) }}
</pre>
</article>
{{ content.comment }}
